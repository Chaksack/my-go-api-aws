import { HttpRouteIntegration } from "@aws-cdk/aws-apigatewayv2-alpha";
import { Construct } from "constructs";
import { Api, ApiFunctionRouteProps, ApiProps } from "./Api";
import { Function as Fn, FunctionDefinition } from "./Function";
export interface GraphQLApiProps extends Omit<ApiProps, "routes"> {
    /**
     * Path to graphql-codegen configuration file
     */
    codegen?: string;
    server: FunctionDefinition;
    rootPath?: string;
}
export declare class GraphQLApi extends Api {
    private readonly codegen?;
    private lambdaIntegration?;
    private rootPath?;
    constructor(scope: Construct, id: string, props: GraphQLApiProps);
    get serverFunction(): Fn;
    protected createFunctionIntegration(scope: Construct, routeKey: string, routeProps: ApiFunctionRouteProps, postfixName: string): HttpRouteIntegration;
    getConstructMetadata(): {
        data: {
            graphql: true;
            codegen: string | undefined;
            url: string | undefined;
            httpApiId: string;
            customDomainUrl: string | undefined;
            routes: {
                route: string;
                fn: {
                    node: string;
                    stack: string;
                } | undefined;
            }[];
        };
        type: "Api";
    };
}
